package com.lovdmx.control.controller.admin;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.github.pagehelper.PageInfo;
import com.lovdmx.control.common.utils.AssembleDataUtils;
import com.lovdmx.control.controller.BaseController;
import com.lovdmx.control.pojo.IntelligentGateway;
import com.lovdmx.control.pojo.RackDevice;
import com.lovdmx.control.pojo.Relay;
import com.lovdmx.control.service.IntelligentGatewayService;
import com.lovdmx.control.service.RackDeviceService;
import com.lovdmx.control.service.RelayService;

/**
 * 
 * Copyright: Copyright (c) 2019 LanRu-Caifu
 * 
 * @ClassName: RelayController.java
 * @Description: 继电器控制器
 *
 * @version: v1.0.0
 * @author: syz
 * @date: 2019年7月6日 下午4:31:04
 *
 */
@Controller
@RequestMapping("/lovdmx/ht/relay/")
public class RelayController extends BaseController {

	@Autowired
	private RelayService relayService; // 继电器
	@Autowired
	private IntelligentGatewayService intelligentGatewayService; // 智能网关
	@Autowired
	private RackDeviceService rackDeviceService; // 机柜

	@RequestMapping(value = "index.do", method = RequestMethod.GET)
	public String index(Relay relay, Integer pageNo, ModelMap map) {

		// 获取所有机柜信息
		List<RackDevice> rackDeviceList = rackDeviceService.findAll();
		// 模糊查询 分页
		PageInfo<Relay> pageInfo = null;
		// 智能网关信息
		List<IntelligentGateway> intelligentGatewayList = null;
		if (relay.getRackId() != null) {
			intelligentGatewayList = intelligentGatewayService.findByRackId(relay.getRackId());
			pageInfo = relayService.queryPageListByWhereGatewayMac(relay, pageNo, rows);
			for (Relay relayInfo : pageInfo.getList()) {
				// 有序排序在线和不在线信息
				String[] split = relayInfo.getElectricRelayLoopOFF().split(",");
				relayInfo.setOnlineStateList(
						AssembleDataUtils.getAssembleDataIsOnlineStateList(relayInfo.getNumber(), split));
			}
		}
		map.put("relay", relay);
		map.put("pageInfo", pageInfo);
		map.put("rackDeviceList", rackDeviceList);
		map.put("intelligentGatewayList", intelligentGatewayList);
		return "intelligentGateway/relay/relay_list";
	}

	/**
	 * 
	 * @Function: RelayController.java
	 * @Description: 根据网关Mac 获取继电器信息
	 *
	 * @param:描述1描述
	 * @return：返回结果描述
	 * @throws：异常描述
	 *
	 * @version: v1.0.0
	 * @author: syz
	 * @date: 2019年7月10日 下午2:51:44
	 *
	 *        Modification History: Date Author Version Description
	 *        ---------------------------------------------------------* 2019年7月10日
	 *        Administrator v1.0.0 修改原因
	 */
	@ResponseBody
	@RequestMapping(value = "getRelayInfoByGatewayMac.do", method = RequestMethod.GET)
	public List<Relay> getRelayInfoByGatewayMac(String gatewayMac) {
		// 根据网关Mac 获取继电器信息
		List<Relay> relayList = relayService.findByGatewayMac(gatewayMac);
		return relayList;
	}

}
